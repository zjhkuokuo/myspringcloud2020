server:
  port: 8803

spring:
  application:
    name: cloud-stream-consumer
  cloud:
    stream:
      binders:    #binder绑定消息的类型,以及配置要绑定消息的服务信息
        defaultRabbit:    # 表示定义的名称，用于binding整合
          type: rabbit      # 消息类型，此外还有kafka
          environment:      # 设置rabbitmq的相关的环境配置
            spring:
              rabbitmq:
                host: localhost
                port: 5672
                username: guest
                password: guest
      bindings:     # 服务整合处理
       input:      # 这个名字是一个通道的名称，表示消息的输入，类比为消息的消费者。此外还有output，表示消息的输出，类比生产者
         destination: studyExchange     # 表示要使用的Exchange名称定义
         content-type: application/json    #设置消息的类型，application/json表示json格式，text/plain表示文本格式
         binder: defaultRabbit        # 设置要绑定的消息服务的具体设置
         group: team01    #自定义分组，不同的消息消费者通过分组进行分类，不同组的消费者接收的消息可以重复，同组的消费者(如8803也可配置group: team01)
                          #接收消息为先到先得，例如：避免订单重复。没有定义分组时，RabbitMQ会随机分配一个组，通常不属于其他组。
                          #消息持久化：使用分组注册进过RabbitMQ并获取过消息，在宕机重启后然后能接收到未消费的消息，与同组的其他成员竞争关系为先到先得。
                          #如果没有分组或者更换了没注册过RabbitMQ的组则获取不到消息。
eureka:
  client:
    service-url:
      defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/
  instance:
    lease-renewal-interval-in-seconds: 2 # 设置心跳的时间间隔(默认是30秒)
    lease-expiration-duration-in-seconds: 5 # 如果现在超过了5秒的间隔(默认是90秒)
    instance-id: receive-8803.com # 在信息列表时显示主机名称
    prefer-ip-address: true # 访问路径变为IP地址
